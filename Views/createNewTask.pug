doctype html
html(lang="es")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        link(rel="stylesheet", href="/css/globalStyle.css")
        link(rel="stylesheet", href="/css/newTaskSyte.css")
        link(rel="stylesheet", href="/css/alertStyle.css")
        link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")
        link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")
        link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")
        link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")
        title New task
    body 
        .cont-noti
        .cont-form 
            a(href="/created-tasks" class="atras")
                span(class="material-symbols-outlined") arrow_back 
            h2.titulo Create new task
            form(action="/create-new-task" class="formulario" method='POST' autocomplete="off")
                label(class="etiqueta-form") Title task
                input(type="text", placeholder="Title", name="title", class="entrada", required)

                hr(class='division')
                label(class="etiqueta-form") User
                select(name="user", class="entrada user-select", required) 
                    //- Esto cambialo de manera nativa
                    option(value="1" class='option-s') Manuel 
                    option(value="2" class='option-s') David  

                label(class="etiqueta-form") Task responsibility
                input(type="text", placeholder="Task responsibility", name="task-responsibility", class="entrada", required)

                label(class="etiqueta-form") Instructions
                textarea(name="instructions" class="entrada" class='text-area', required)

                label(class="etiqueta-form") Deadline
                input(type="date", name="date-finish" class="entrada date-input" required)

                button(type='button' id='new-person' class='btn-add-user') 
                    span(class="material-symbols-outlined") person_add

                button(type="submit", class="btn") Add
    
    script.
    
        // Establecer la fecha máxima del input a la fecha actual
        document.querySelector('.date-input').min = obtenerFechaActual();

        // Formatea la fecha actual en formato yyyy-mm-dd
        function obtenerFechaActual() {
            const today = new Date();
            var day = today.getDate();
            var month = String(today.getMonth() + 1);
            const year = today.getFullYear();

            // Medio para poderle poner un cero antes si es un numero de 1-9, que tenga 01-09
            if(month < 10){
                month = '0' + month;
            }
            // Medio para poderle poner un cero antes si es un numero de 1-9, que tenga 01-09
            if(day < 10){
                day = '0' + day;
            }

            return `${year}-${month}-${day}`;
        }

        // Evento click del btn 'new-person'
        document.getElementById('new-person').addEventListener('click', function() {

            // Cadena de HTML
            const formHTML = `
                <div class=cont-new-user>
                    <hr class='division'>
                    <div class='cont-close-btn'><span class="eliminated-user">&times</span></div>
                    <label class="etiqueta-form">User</label>
                    <select name="user" class="entrada user-select" required>
                        <option value="1" class='option-s'>Manuel</option>
                        <option value="2" class='option-s'>David</option>
                    </select>
                    <label class="etiqueta-form">Task responsibility</label>
                    <input type="text" placeholder="Task responsibility" name="task-responsibility" class="entrada" required>
                    <label class="etiqueta-form">Instructions</label>
                    <textarea name="instructions" class="entrada text-area" required></textarea>
                    <label class="etiqueta-form">Deadline</label>
                    <input type="date" name="date-finish" class="entrada date-input"  required>
                </div>
            `;

            // Tomamos la referencia del elemento  Insertamos el valor al DOM, indicandole que lo queremos antes de este elemento
            document.getElementById('new-person').insertAdjacentHTML('beforebegin', formHTML);
            
            //   Referencia del div contenedor     tipo de notificacion
            showNotify(document.querySelector('.cont-noti'), 2);

                // Evento de click para borrar a un nuevo usuario
                document.querySelectorAll('.eliminated-user').forEach(function(button) {
                    button.addEventListener('click', function() {
                        // Busca el contenedor cercano al evento que contenga la clase .cont-new-user y devuelve su referencia
                        var divCont = button.closest('.cont-new-user');
                        // Comprobamos si tenemos la referencia, de ser así lo eliminamos
                        if (divCont) {
                            divCont.remove();
                            //   Referencia del div contenedor     tipo de notificacion
                            showNotify(document.querySelector('.cont-noti'), 1);
                        }
                    });
                });

                // Referencia y procesado de elementos existentes 
                document.querySelectorAll('.date-input').forEach(function(element) {
                    // Le damos el valor de la fecha bloqueada
                    element.min = obtenerFechaActual();
                    // Añadimos que este no pueda teclear la fecha, si no seleccionarla
                    element.addEventListener('keydown', function(e) {
                        e.preventDefault();
                    });
                });
        });

        function showNotify(ref, type){
            const alertDeleteUserHTML = 
            `
                <div id="alerta" class="alertStyle">
                    <div class="cont-alert">
                        <span class="material-symbols-outlined" id="icon-error">person_cancel</span>
                        <div class="cont-text">
                            <p id="titulo-error">User deleted</p>
                            <span id="mensaje">Hey, you've removed a user from this task.</span>
                        </div>
                        <span id="cerrar-notificacion">&times;</span>
                    </div>
                </div>
            `;

            const alertAddUserHTML =
            `
                <div id="alerta">
                    <div class="cont-alert">
                        <span class="material-symbols-outlined" id="icon-error">person_add</span>
                        <div class="cont-text">
                            <p id="titulo-error">Add user</p>
                            <span id="mensaje">You have added a new user to the task.</span>
                            <span id="cerrar-notificacion">&times;</span>
                        </div>
                    </div>
                </div>
            `;


            if(type == 1){
                ref.innerHTML = alertDeleteUserHTML;
            }

            if(type == 2){
                ref.innerHTML = alertAddUserHTML;
            }

            // animacion de las alertas
            const divAlert = document.getElementById("alerta");
            const closeAlert = document.getElementById("cerrar-notificacion")
            divAlert.className = "show-alert"
            // Evento click
            closeAlert.addEventListener("click", () => {
                divAlert.className = divAlert.className.replace("show-alert", "close-alert"); 
                // Tiempo para que se ejecute la animacion y se elimine
                setTimeout(() => {
                    divAlert.remove();
                }, 2000); 
            })
            // Funcion para cambiar el estado de la clase y removerlo dado un tiempo
            setTimeout(function(){ 
                // Cambio de clase
                divAlert.className = divAlert.className.replace("show-alert", ""); 
                // Removemos la notificacion
                divAlert.remove(); 
            }, 4000);  
        }
        





